#!/bin/sh
#
# Copyright (C) 2013-2016 OpenMediaVault Plugin Developers
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

SERVICE="plexmediaserver"

# Enable/disable Plexpy
if [ "$(omv_config_get "//services/plexmediaserver/pyenable")" = "1" ]; then
    if [ ! -d /opt/plexpy ]; then
        git clone https://github.com/drzoidberg33/plexpy.git /opt/plexpy
        chmod +x /opt/plexpy/init-scripts/init.ubuntu
        ln -s /opt/plexpy/init-scripts/init.ubuntu /etc/init.d/plexpy
        chown -R plex:plex /opt/plexpy
    fi

    # Configure
    if [ "$(omv_config_get "//services/plexmediaserver/pyrun")" = "1" ]; then
        # Create defaults
        HP_PORT="$(omv_config_get "//services/plexmediaserver/pyport")"
        cat <<EOF > /etc/default/plexpy
## The defaults
# Run as username
HP_USER=plex

# Path to app HP_HOME=path_to_app_PlexPy.py
HP_HOME=/opt/plexpy

# Data directory where plexpy.db, cache and logs are stored
HP_DATA=/opt/plexpy

# Path to store PID file
HP_PIDFILE=/var/run/plexpy/plexpy.pid

# Path to python bin
PYTHON_BIN=/usr/bin/python

# Extra daemon option like: HP_OPTS=" --config=/opt/plexpy/config.ini"
HP_OPTS=" --config=/opt/plexpy/config.ini"

# Extra start-stop-daemon option like START_OPTS=" --group=users"
SSD_OPTS=

# Hardcoded port to run on, overrides config.ini settings
HP_PORT="${HP_PORT} "

EOF
        deb-systemd-helper enable plexpy.service >/dev/null || true
        deb-systemd-invoke restart plexpy.service >/dev/null || true
    else
        deb-systemd-helper disable plexpy.service >/dev/null || true
        deb-systemd-invoke stop plexpy.service >/dev/null || true
    fi
else
    if [ -d /opt/plexpy ]; then
        deb-systemd-helper disable plexpy.service >/dev/null || true
        deb-systemd-invoke stop plexpy.service >/dev/null || true
        rm -f /etc/default/plexpy >/dev/null 2>&1
        rm -Rf /opt/plexpy >/dev/null 2>&1
        rm -f /etc/init.d/plexpy >/dev/null 2>&1
    fi
fi

# Enable/disable service
if [ "$(omv_config_get "//services/plexmediaserver/enable")" != "1" ]; then
    exit 0
fi

PLEX_HOME="$(getent passwd plex | cut -d: -f6)"
DB_FOLDER="$(omv_config_get "//services/plexmediaserver/db-folder")"
DB_MNTENTREF="$(omv_config_get "//services/plexmediaserver/mntentref")"
DB_MNTENTDIR=$(xmlstarlet sel -t -m "//system/fstab/mntent[uuid='${DB_MNTENTREF}']" -v dir -b ${OMV_CONFIG_FILE} | xmlstarlet unesc)

if ! getent group plex >/dev/null 2>&1; then
    chown -R plex:nogroup "${PLEX_HOME}"
else
    chown -R plex:plex "${PLEX_HOME}"
fi

if [ "${PLEX_HOME}" != "${DB_FOLDER}" ]; then
    if ! omv_is_mounted "${DB_MNTENTDIR}" ; then
        exit 1
    fi

    deb-systemd-invoke stop ${SERVICE}.service >/dev/null || true
    pkill -9 -u `id -u plex` || :

    if [ ! -d "${DB_FOLDER}/Library" ]; then
        cp -rfp "${PLEX_HOME}" "${DB_FOLDER}"
        rm -rf "${PLEX_HOME}"
        if ! grep "EnvironmentFile" /etc/systemd/system/plexmediaserver.service ; then
            sed -i '/Service/a EnvironmentFile=/etc/default/plexmediaserver' /etc/systemd/system/plexmediaserver.service
            systemctl daemon-reload
        fi
        usermod -d "${DB_FOLDER}" plex
    fi

    # Check current database uid.  If different, chown
    dbid="$(stat -c "%u" "${DB_FOLDER}/Library")"
    userid="$(getent passwd plex | cut -d: -f3)"
    if [ "${dbid}" != "${userid}" ]; then
        echo "Changing to proper owner.  This could take a few minutes."
        if ! getent group plex >/dev/null 2>&1; then
            chown -R plex:nogroup "${DB_FOLDER}"
        else
            chown -R plex:plex "${DB_FOLDER}"
        fi
    fi

    deb-systemd-invoke start ${SERVICE}.service >/dev/null || true
fi

# created for plex uninstall because it fails if it can't remove this directory.
if [ ! -d "/var/lib/plexmediaserver" ]; then
    mkdir -p /var/lib/plexmediaserver
fi
